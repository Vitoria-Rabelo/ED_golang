{
    "patches": [
        {
            "label": "2025-07-12_18-16-27",
            "content": "@@ -1,8 +1,48 @@\n+@@ -1742,1749 +1742,4 @@%0A %257D%250A%257D%250A%0A-\n package \n@@ -49,18 +49,22 @@\n main\n-%0A%0A\n+%250A%250A\n import (\n %0A%09%22b\n@@ -63,195 +63,309 @@\n rt (\n-%0A%09%22bufio%22%0A%09%22fmt%22%0A%09%22os%22%0A)%0A%0Atype Pos struct %7B%0A%09l, c int%0A%7D%0A%0Afunc (p Pos) pegarVizinhos() %5B%5DPos %7B%0A%09return %5B%5DPos%7B%0A%09%09%7Bp.l - 1, p.c%7D,%0A%09%09%7Bp.l + 1, p.c%7D,%0A%09%09%7Bp.l, p.c - 1%7D,%0A%09%09%7Bp.l, p.c + 1%7D,%0A%09%7D%0A%7D%0A%0A\n+%250A%2509%2522bufio%2522%250A%2509%2522fmt%2522%250A%2509%2522os%2522%250A)%250A%250Atype Pos struct %257B%250A%2509l, c int%250A%257D%250A%250Afunc (p Pos) pegarVizinhos() %255B%255DPos %257B%250A%2509return %255B%255DPos%257B%250A%2509%2509%257Bp.l - 1, p.c%257D,%250A%2509%2509%257Bp.l + 1, p.c%257D,%250A%2509%2509%257Bp.l, p.c - 1%257D,%250A%2509%2509%257Bp.l, p.c + 1%257D,%250A%2509%257D%250A%257D%250A%250A\n func\n@@ -383,20 +383,28 @@\n ida(mat \n-%5B%5D%5B%5D\n+%255B%255D%255B%255D\n rune, in\n@@ -422,19 +422,25 @@\n im Pos) \n-%7B%0A%09\n+%257B%250A%2509\n fila := \n@@ -451,16 +451,22 @@\n ueue\n-%5BPos%5D()%0A\n+%255BPos%255D()%250A\n     \n@@ -485,19 +485,25 @@\n (inicio)\n-%0A%0A%09\n+%250A%250A%2509\n visitado\n@@ -519,20 +519,28 @@\n (map\n-%5BPos%5Dbool)%0A%09\n+%255BPos%255Dbool)%250A%2509\n visi\n@@ -548,24 +548,32 @@\n ados\n-%5B\n+%255B\n inicio\n-%5D\n+%255D\n  =true\n-%0A%09\n+%250A%2509\n ante\n@@ -589,20 +589,30 @@\n (map\n-%5BPos%5DPos)%0A%0A%09\n+%255BPos%255DPos)%250A%250A%2509\n for \n@@ -627,20 +627,28 @@\n Empty() \n-%7B%0A%09%09\n+%257B%250A%2509%2509\n atual, o\n@@ -670,69 +670,125 @@\n ue()\n-%0A%09%09if !ok %7B%0A%09%09%09break%0A%09%09%7D%0A%09%09if atual == fim %7B%0A%09%09%09break%0A%09%09%7D%0A%0A%09%09\n+%250A%2509%2509if !ok %257B%250A%2509%2509%2509break%250A%2509%2509%257D%250A%2509%2509if atual == fim %257B%250A%2509%2509%2509break%250A%2509%2509%257D%250A%250A%2509%2509\n for \n@@ -827,21 +827,33 @@\n s() \n-%7B%0A%09%09%09\n+%257B%250A%2509%2509%2509\n if v.l \n-%3E\n+%253E\n = 0 \n@@ -859,17 +859,19 @@\n  && v.l \n-%3C\n+%253C\n  len(mat\n@@ -883,9 +883,11 @@\n v.c \n-%3E\n+%253E\n = 0 \n@@ -897,17 +897,19 @@\n v.c \n-%3C\n+%253C\n  len(mat\n %5B0%5D)\n@@ -908,134 +908,208 @@\n (mat\n-%5B0%5D) %7B%0A%09%09%09%09if (mat%5Bv.l%5D%5Bv.c%5D == ' ' %7C%7C mat%5Bv.l%5D%5Bv.c%5D == 'F') && !visitados%5Bv%5D %7B%0A%09%09%09%09%09visitados%5Bv%5D = true%0A%09%09%09%09%09antes%5Bv%5D\n+%255B0%255D) %257B%250A%2509%2509%2509%2509if (mat%255Bv.l%255D%255Bv.c%255D == ' ' %257C%257C mat%255Bv.l%255D%255Bv.c%255D == 'F') && !visitados%255Bv%255D %257B%250A%2509%2509%2509%2509%2509visitados%255Bv%255D = true%250A%2509%2509%2509%2509%2509antes%255Bv%255D\n  = atual\n %0A   \n@@ -1104,17 +1104,19 @@\n  = atual\n-%0A\n+%250A\n         \n@@ -1121,54 +1121,110 @@\n     \n-%0A%09%09%09%09%09fila.Enqueue(v)   %0A%09%09%09%09%7D%0A%09%09%09%7D%0A%09%09%7D%0A%0A%09%7D%0A%0A%09\n+%250A%2509%2509%2509%2509%2509fila.Enqueue(v)   %250A%2509%2509%2509%2509%257D%250A%2509%2509%2509%257D%250A%2509%2509%257D%250A%250A%2509%257D%250A%250A%2509\n if _\n@@ -1252,13 +1252,17 @@\n ados\n-%5Bfim%5D\n+%255Bfim%255D\n ; en\n@@ -1270,20 +1270,28 @@\n ontrado \n-%7B%0A%09%09\n+%257B%250A%2509%2509\n for atua\n@@ -1334,66 +1334,104 @@\n ntes\n-%5B\n+%255B\n atual\n-%5D%7B%0A%09%09%09mat%5B\n+%255D%257B%250A%2509%2509%2509mat%255B\n atual.l\n-%5D%5B\n+%255D%255B\n atual.c\n-%5D\n+%255D\n  = '.'\n-%0A%09%09%7D%0A%09%09mat%5B\n+%250A%2509%2509%257D%250A%2509%2509mat%255B\n inicio.l\n %5D%5Bin\n@@ -1430,18 +1430,22 @@\n io.l\n-%5D%5B\n+%255D%255B\n inicio.c\n %5D = \n@@ -1444,23 +1444,41 @@\n io.c\n-%5D\n+%255D\n  = '.'\n-%7D%0A%7D%0A%09%09%09%0A\n+%257D%250A%257D%250A%2509%2509%2509%250A\n func\n@@ -1485,19 +1485,25 @@\n  main() \n-%7B%0A%09\n+%257B%250A%2509\n scanner \n@@ -1531,19 +1531,25 @@\n s.Stdin)\n-%0A%0A%09\n+%250A%250A%2509\n var nl, \n@@ -1554,18 +1554,22 @@\n , nc int\n-%0A%09\n+%250A%2509\n scanner.\n@@ -1574,18 +1574,22 @@\n r.Scan()\n-%0A%09\n+%250A%2509\n line := \n@@ -1602,18 +1602,22 @@\n r.Text()\n-%0A%09\n+%250A%2509\n fmt.Ssca\n@@ -1629,15 +1629,23 @@\n ne, \n-%22%25d %25d%22\n+%2522%2525d %2525d%2522\n , &n\n@@ -1651,18 +1651,22 @@\n nl, &nc)\n-%0A%09\n+%250A%2509\n mat := m\n@@ -1673,12 +1673,20 @@\n ake(\n-%5B%5D%5B%5D\n+%255B%255D%255B%255D\n rune\n@@ -1722,19 +1722,25 @@\n de runes\n-%0A%0A%09\n+%250A%250A%2509\n // Carre\n@@ -1751,18 +1751,22 @@\n o matriz\n-%0A%09\n+%250A%2509\n for i :=\n@@ -1775,20 +1775,28 @@\n ange nl \n-%7B%0A%09%09\n+%257B%250A%2509%2509\n scanner.\n@@ -1801,19 +1801,25 @@\n r.Scan()\n-%0A%09%09\n+%250A%2509%2509\n line := \n@@ -1836,38 +1836,64 @@\n xt()\n-%0A%09%09mat%5Bi%5D = %5B%5Drune(line)%0A%09%7D%0A%0A%09\n+%250A%2509%2509mat%255Bi%255D = %255B%255Drune(line)%250A%2509%257D%250A%250A%2509\n var \n@@ -1907,19 +1907,25 @@\n  fim Pos\n-%0A%0A%09\n+%250A%250A%2509\n // Procu\n@@ -1971,10 +1971,20 @@\n posi\n-%C3%A7%C3%B5\n+%25C3%25A7%25C3%25B5\n es i\n@@ -1990,18 +1990,22 @@\n iniciais\n-%0A%09\n+%250A%2509\n for l :=\n@@ -2014,20 +2014,28 @@\n ange nl \n-%7B%0A%09%09\n+%257B%250A%2509%2509\n for c :=\n@@ -2048,59 +2048,107 @@\n  nc \n-%7B%0A%09%09%09if mat%5Bl%5D%5Bc%5D == 'I' %7B%0A%09%09%09%09mat%5Bl%5D%5Bc%5D = ' '%0A%09%09%09%09\n+%257B%250A%2509%2509%2509if mat%255Bl%255D%255Bc%255D == 'I' %257B%250A%2509%2509%2509%2509mat%255Bl%255D%255Bc%255D = ' '%250A%2509%2509%2509%2509\n inic\n@@ -2159,69 +2159,129 @@\n  Pos\n-%7B\n+%257B\n l, c\n-%7D%0A%09%09%09%7D%0A%09%09%09if mat%5Bl%5D%5Bc%5D == 'F' %7B%0A%09%09%09%09mat%5Bl%5D%5Bc%5D = ' '%0A%09%09%09%09\n+%257D%250A%2509%2509%2509%257D%250A%2509%2509%2509if mat%255Bl%255D%255Bc%255D == 'F' %257B%250A%2509%2509%2509%2509mat%255Bl%255D%255Bc%255D = ' '%250A%2509%2509%2509%2509\n fim \n@@ -2289,29 +2289,63 @@\n  Pos\n-%7B\n+%257B\n l, c\n-%7D%0A%09%09%09%7D%0A%09%09%7D%0A%09%7D%0A%0A%09\n+%257D%250A%2509%2509%2509%257D%250A%2509%2509%257D%250A%2509%257D%250A%250A%2509\n proc\n@@ -2375,11 +2375,17 @@\n fim)\n-%0A%0A%09\n+%250A%250A%2509\n for \n@@ -2409,12 +2409,20 @@\n mat \n-%7B%0A%09%09\n+%257B%250A%2509%2509\n fmt.\n@@ -2510,10 +2510,23 @@\n imir\n-%0A%09%7D%0A%7D\n+%250A%2509%257D%250A%257D%250A\n %0A\n",
            "lines": "3"
        },
        {
            "label": "2025-07-12_18-17-55",
            "content": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n)\n\ntype Pos struct {\n\tl, c int\n}\n\nfunc (p Pos) pegarVizinhos() []Pos {\n\treturn []Pos{\n\t\t{p.l - 1, p.c},\n\t\t{p.l + 1, p.c},\n\t\t{p.l, p.c - 1},\n\t\t{p.l, p.c + 1},\n\t}\n}\n\nfunc procurarSaida(mat [][]rune, inicio Pos, fim Pos) {\n\tfila := NewQueue[Pos]()\n    fila.Enqueue(inicio)\n\n\tvisitados := make(map[Pos]bool)\n\tvisitados[inicio] =true\n\tantes := make(map[Pos]Pos)\n\n\tfor !fila.IsEmpty() {\n\t\tatual, ok := fila.Dequeue()\n\t\tif !ok {\n\t\t\tbreak\n\t\t}\n\t\tif atual == fim {\n\t\t\tbreak\n\t\t}\n\n\t\tfor _, v := range atual.pegarVizinhos() {\n\t\t\tif v.l >= 0 && v.l < len(mat) && v.c >= 0 && v.c < len(mat[0]) {\n\t\t\t\tif (mat[v.l][v.c] == ' ' || mat[v.l][v.c] == 'F') && !visitados[v] {\n\t\t\t\t\tvisitados[v] = true\n\t\t\t\t\tantes[v] = atual\n          \n\t\t\t\t\tfila.Enqueue(v)   \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tif _, encontrado := visitados[fim]; encontrado {\n\t\tfor atual := fim; atual != inicio; atual = antes[atual]{\n\t\t\tmat[atual.l][atual.c] = '.'\n\t\t}\n\t\tmat[inicio.l][inicio.c] = '.'}\n}\n\t\t\t\nfunc main() {\n\tscanner := bufio.NewScanner(os.Stdin)\n\n\tvar nl, nc int\n\tscanner.Scan()\n\tline := scanner.Text()\n\tfmt.Sscanf(line, \"%d %d\", &nl, &nc)\n\tmat := make([][]rune, nl) // Inicializa a matriz de runes\n\n\t// Carregando matriz\n\tfor i := range nl {\n\t\tscanner.Scan()\n\t\tline := scanner.Text()\n\t\tmat[i] = []rune(line)\n\t}\n\n\tvar inicio, fim Pos\n\n\t// Procurando inicio e fim e colocando ' ' nas posi\u00e7\u00f5es iniciais\n\tfor l := range nl {\n\t\tfor c := range nc {\n\t\t\tif mat[l][c] == 'I' {\n\t\t\t\tmat[l][c] = ' '\n\t\t\t\tinicio = Pos{l, c}\n\t\t\t}\n\t\t\tif mat[l][c] == 'F' {\n\t\t\t\tmat[l][c] = ' '\n\t\t\t\tfim = Pos{l, c}\n\t\t\t}\n\t\t}\n\t}\n\n\tprocurarSaida(mat, inicio, fim)\n\n\tfor _, line := range mat {\n\t\tfmt.Println(string(line)) // Converte o slice de runes de volta para string para imprimir\n\t}\n}\n",
            "lines": "96"
        }
    ]
}